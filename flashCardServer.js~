"use strict"
// Globals
const express = require('express')
const port = 52559 // you need to put your port number here

const APIrequest = require('request');
const http = require('http');

const APIkey = "AIzaSyBtmGMsUOLVBJAE6tEZ3xvnH29vAYETnYk";  // ADD API KEY HERE
const url = "https://translation.googleapis.com/language/translate/v2?key="+APIkey;

const sqlite3 = require("sqlite3").verbose();  // use sqlite
const fs = require("fs");

const dbFileName = "Flashcards.db";
// makes the object that represents the database in our code
const db = new sqlite3.Database(dbFileName);  

// An object containing the data expressing the query to the
// translate API.
// Below, gets stringified and put into the body of an HTTP PUT request.
let requestObject =
    {
	     "source": "en",
	     "target": "ms",
	     "q": [
	          "example phrase"
	     ]
    }
//cjfitzpa@server162.site
function translateHandler(req, res, next) {
    let url1 = req.url;
    console.log(url1.english);
    requestObject.q[0] = req.query.english;
    myfunc(res);
}
function storeFlashCard(req, res, next){
  let urlT = req.url;
  console.log(urlT.malay);
  let malay = req.query.malay;
  let english = req.query.english;
  const cmdStr = 'INSERT into Flashcards(user, english, malay, seen, correct) VALUES (1, @0, @1, 0, 0)';
  db.run(cmdStr, english, malay, storeFlashCardCallback);
  function storeFlashCardCallback(err){
      if (err) {console.log("storeFlashCardCallback error: " + err);}
      else {res.json({ StoredCard : "true" });}
  }
}
function fileNotFound(req, res) {
    let url = req.url;
    res.type('text/plain');
    res.status(404);
    res.send('Cannot find '+url);
}

function myfunc(res){
  function APIcallback(err, APIresHead, APIresBody) {
  	if ((err) || (APIresHead.statusCode != 200)) {
  	    console.log("Got API error");
  	    console.log(APIresBody);
  	} else {
  	    if (APIresHead.error) {
  		      // API worked but is not giving you data
  		    console.log(APIresHead.error);
  	    } else {
   		res.json( { EnglishPhrase  : requestObject.q[0], InMalay : APIresBody.data.translations[0].translatedText } );
  	    }
  	}
  }
  APIrequest(
    	{ // HTTP header stuff
  	    url: url,
  	    method: "POST",
  	    headers: {"content-type": "application/json"},
  	    json: requestObject
      }, APIcallback
  );
}

// put together the server pipeline
const app = express();
app.use(express.static('public') );  // can I find a static file?
app.get('/translate', translateHandler );   // if not, is it a valid query?
app.get('/store', storeFlashCard ); //
app.use(fileNotFound );            // otherwise not found

app.listen(port, function (){console.log('Listening...');} )
